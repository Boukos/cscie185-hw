Assignment ! - Alexandre de Melo Correia Pinto

Problem 1. When you open R Studio, go to the text editor in the top left corner first.Type all commands in the text editor. Execute one or several commands by highlightingthose commands, holding Ctrl key and hitting Return button. In that way you arepreserving your work as a script. You are advised to read help pages for all R functionsyou will use.a) Ask the system for the current working directory. On your operating system,create a special directory for work with R, something like C:\Code\R or/code/R. Make that directory both readable and writable.

> getwd()[1] "/Users/alexcp/Dropbox/Courses"
b) Change your working directory to the new directory using appropriate R function.Copy the attached file Smokers.txt to your new directory.> setwd("/Users/alexcp/Dropbox/Courses/Harvard/cscie185-hw/Assign01")> getwd()[1] "/Users/alexcp/Dropbox/Courses/Harvard/cscie185-hw/Assign01"c) Create a vector vv with elements which repeat numbers 1,2,3 five times, usingfunctions rep() and c(). What is the length of you vector. Do not just tell us,please as R to tell you the length. Save that vector into a file in your workingdirectory using function save(). Initially, name your file vv.RData. Try toopen the file with an editor like Vim or notepad. Please do not change anythingin the file.

> vv <- c(rep(1,5), rep(2,5), rep(3,5))> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3> length(vv)[1] 15
> save("vv", file = "vv.RData")
$ cat vv.RData 
?
r?0??b```b`?bf ??	H02?0p???ʀ$??`B??4q4??x?S?$
d) Save your vector vv into another file, called vv.txt. This time turn the asciiparameter of save() function to TRUE. Try reading your file. Could you do itthis time?

> save("vv", file = "vv.txt", ascii = TRUE)
$ cat vv.txt
RDA2
A
2
134914
131840
1026
1
262153
2
vv
14
15
1
1
1
1
1
2
2
2
2
2
3
3
3
3
3
254

e) Use R function list.files() to list the content of your working directory.

> list.files()[1] "e185_Assign01_Intro_to_R.pdf"            [2] "E185_DeMeloCorreiaPintoAlexandreHW01.txt"[3] "Smokers.txt"                             [4] "vv.RData"                                [5] "vv.txt" 
f) Point function list.files() to any other directory and assign its result to avariable. What is the class of that variable? (Hint, use function class()). Whatis the structure of variable vv. (Hint, use function str()). What is the mode ofvariable vv. (Hint, use function mode()).

> file_list = list.files(path = "/Users/alexcp/Dropbox/Courses/Harvard")> file_list[1] "Add Course.pdf"               "cscie185-hw"                 [3] "New Student.pdf"              "Syllabus_E185_Spring2013.pdf"> class(file_list)[1] "character"> str(vv) num [1:15] 1 1 1 1 1 2 2 2 2 2 ...> mode(vv)[1] "numeric"
g) Remove variable vv from your workspace. Next, load that variable from filevv.RData. Verify that you got whatever you stored.

> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3> rm(vv)> vvError: object 'vv' not found> load("vv.RData")> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3
h) Remove variable vv from your workspace, again. This time, load that variablefrom file vv.txt. Again, verify that you have recovered your variable.

> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3> rm(vv)> vvError: object 'vv' not found> load("vv.txt")> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3
i) Save the content of your text editor as a file with extension R. You can rerun allcommands in that file as a script, if you want, one day. You might want to edit thefile first, but that is another matter. Provide that file as a part of your submission.

Saved as Problem1.R
j) Close R Studio. Do not forget to save your workspace. Restart R Studio.Convince yourself that all of your variables are there.

[Workspace loaded from ~/Dropbox/Courses/Harvard/cscie185-hw/Assign01/.RData]> vv [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3> file_list[1] "Add Course.pdf"               "cscie185-hw"                 [3] "New Student.pdf"              "Syllabus_E185_Spring2013.pdf"

-----------------------------------------------

Problem 2. Create a vector num of numbers with 8 randomly ordered values between 1and 20. Use c() function.a) Turn that vector into another vector of characters cnum using functionas.character().

> sample(20, 8)[1]  2 16 14  5  1 19 18 15> num <- c(2, 16, 14,  5,  1, 19, 18, 15)> num[1]  2 16 14  5  1 19 18 15> cnum <- as.character(num)> cnum[1] "2"  "16" "14" "5"  "1"  "19" "18" "15"
b) Calculate minimum, maximum and mean value of two vectors.

> min(num)[1] 1> max(num)[1] 19> mean(num)[1] 11.25> min(cnum)[1] "1"> max(cnum)[1] "5"> mean(cnum)[1] NAWarning message:In mean.default(cnum) : argument is not numeric or logical: returning NA
c) Transform vector cnum back into numbers using function as.numeric().Verify that you got numbers back.

> cnum <- as.numeric(cnum)> cnum[1]  2 16 14  5  1 19 18 15
d) Create another vector snum by selecting only those numbers from vector numwhich are greater than 10.

> snum <- cnum[cnum>10]> snum[1] 16 14 19 18 15
e) Create a logical vector lnum which will tell you whether an entry in vector cnumis greater than 10.

> lnum <- cnum>10> lnum[1] FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUEf) Set 3rd element of vector cnum to NA. Recreate logical vector lnum and reportits elements. Recreate vector snum by selecting those elements of vector cnumwhich are greater than 10. What was the effect of NA.

> cnum[3] <- NA> cnum[1]  2 16 NA  5  1 19 18 15> lnum <- cnum>10> lnum[1] FALSE  TRUE    NA FALSE FALSE  TRUE  TRUE  TRUE
> snum <- cnum[cnum>10]> snum[1] 16 NA 19 18 15

The NA propagates on the operations performed, to help reinforce that the observation is inexistent and should not be ignored.
g) Create a character vector cdate with three dates between January 01, 2013 andMarch 01, 2013. As the format for character representation of dates use “January-01-2013”. Transform that vector into vector ddate of Dates class using functionas.Date() and format "%B-%d-%Y". Please read help for as.Dates(). Whatare the class and mode of vector ddate. Display values of vector ddate. Sortvalues in vector ddate. Provide the information on the order that sortingimposed, in other words ask R to tell once sorted which elements came first,which second, and so on.

> cdate <- c("January-20-2013", "February-25-2013", "February-09-2013")> cdate[1] "January-20-2013"  "February-25-2013" "February-09-2013"> ddate <- as.Date(cdate, format="%B-%d-%Y")
> class(ddate)[1] "Date"> mode(ddate)[1] "numeric"> ddate[1] "2013-01-20" "2013-02-25" "2013-02-09"
> sort(ddate)[1] "2013-01-20" "2013-02-09" "2013-02-25"

-----------------------------------------------
Problem 3. Create matrix A with 3 rows and 4 columns. Use small integer valuesbetween -3 and 3 for elements of matrix A.
a) Create new matrix B obtained by subtracting -1 from all elements of matrix A.> X <- c(-3, -2, -3,  0,  3, -2,  3, -1, -1,  2,  3, -1)> X [1] -3 -2 -3  0  3 -2  3 -1 -1  2  3 -1
> A <- matrix(X, nrow=3, ncol=4)> A     [,1] [,2] [,3] [,4][1,]   -3    0    3    2[2,]   -2    3   -1    3[3,]   -3   -2   -1   -1
> B <- A - 1> B     [,1] [,2] [,3] [,4][1,]   -4   -1    2    1[2,]   -3    2   -2    2[3,]   -4   -3   -2   -2b) Create new matrix C obtained by multiplying by 2 all elements of matrix A.
> C <- 2 * A> C     [,1] [,2] [,3] [,4][1,]   -6    0    6    4[2,]   -4    6   -2    6[3,]   -6   -4   -2   -2
c) Create matric TA which is a transpose of A.
> TA <- t(A)> TA     [,1] [,2] [,3][1,]   -3   -2   -3[2,]    0    3   -2[3,]    3   -1   -1[4,]    2    3   -1
d) Calculate matrix ATA which is a matrix product of matrix A multiplied by matrixTA from the right. Ask R to tell you dimensions of matrix ATA.
> ATA <- A %*% TA> ATA     [,1] [,2] [,3][1,]   22    9    4[2,]    9   23   -2[3,]    4   -2   15> dim(ATA)[1] 3 3
e) Calculate matrix TAA whish is a matrix product of matrix TA multiplied bymatrix A from the right. Ask R to tell you dimensions of matrix TAA.

> TAA <- TA %*% A> TAA     [,1] [,2] [,3] [,4][1,]   22    0   -4   -9[2,]    0   13   -1   11[3,]   -4   -1   11    4[4,]   -9   11    4   14> dim(TAA)[1] 4 4
f) Determine matrix AAT which is an inverse of matrix TAA. Prove that AATmultiplied by TAA produces a unit matrix. Unit matrix has all elements on thediagonal equal to 1 and all other elements equal to 0.
> AAT <- solve(TAA)Error in solve.default(TAA) :   system is computationally singular: reciprocal condition number = 2.30319e-18

Since the matrix has a determinant ~ 0, I will change one of the indexes to make it invertible

> TAA[3,2] = 8> AAT <- solve(TAA)> AAT            [,1]       [,2]        [,3]       [,4][1,]  0.12279238 -0.1492143 -0.04491726  0.2090113[2,] -0.12418301  0.3071895  0.11111111 -0.3529412[3,]  0.07898762 -0.1729940  0.04018913  0.1752190[4,]  0.15394243 -0.2878598 -0.12765957  0.4330413> I <- AAT %*% TAA> I              [,1]          [,2]         [,3]          [,4][1,]  1.000000e+00 -4.440892e-16 0.000000e+00  0.000000e+00[2,] -4.440892e-16  1.000000e+00 2.220446e-16  8.881784e-16[3,]  2.220446e-16 -2.220446e-16 1.000000e+00 -4.440892e-16[4,]  0.000000e+00 -8.881784e-16 2.220446e-16  1.000000e+00> round(I)     [,1] [,2] [,3] [,4][1,]    1    0    0    0[2,]    0    1    0    0[3,]    0    0    1    0[4,]    0    0    0    1

-----------------------------------------------
Problem 4. Load data in attached file Smokers.txt into variable smokers usingfunction read.delim(). Use parameters header=TRUE, instructing R to readcolumn header names from the first row of the file, and sep=”\t”, telling R that file istab delimited. As a side note, parameter header=TRUE works only if the first row ofthe data file has one element fewer than the rest of the file.
a) What are the class, mode and str(ucture) of variable smokers.b) What are the dimensions of variable smokers.c) What are the labels (names of horizontal rows) of variable smokers.d) List values in individual columns of variable smokers.e) You have noticed that R interpreted column GDPPerCapita as a factor, i.e. alow cardinality column that could be represented by a small number of levels. Rmade a mistake and we want that column to be a set of integers just like columnGDPRank. You can remove factors from column GDPPerCapita by usingfunction droplevels(). Verify that offending factor is gone by redisplayingthe structure of variable smokers.f) Display columns PercentSmokers and GDPPerCapita using bracketnotation or [, index] selection.g) Use function plot to try to understand whether there is any correlation betweenvariables PercentSmokers (that is the number of people of a country who smoke)and its Gross Domestic product Per Capita. We are just practicing syntax. Theremay not be any correlation. Please label horizontal and vertical axis and place atitle on top of the graph. Represent points on the graph with circles.h) Create a histogram displaying the number of countries in GDPPerCapitabrackets 0 to 2,000, 2,000 to 3,000, 3,000 to 5,000, 5,000 to 10,000 and 10,000 to50,000. Label your histogram. Paint the title in purple color.i) Present the same histogram as a pie chart.


